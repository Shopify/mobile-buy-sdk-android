buildscript {
  dependencies {
    classpath dep.androidPlugin
    classpath dep.androidMavenGradlePlugin
    classpath dep.bintrayGradlePlugin
  }
}

apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

android {
  compileSdkVersion androidConfig.compileSdkVersion
  buildToolsVersion androidConfig.buildToolsVersion

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  defaultConfig {
    minSdkVersion androidConfig.minSdkVersion
    targetSdkVersion androidConfig.targetSdkVersion
    versionName VERSION_NAME
    version VERSION_NAME

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  libraryVariants.all { variant ->
    variant.outputs.all { output ->
      def outputFile = output.outputFile
      if (outputFile != null && outputFile.name.endsWith('.aar')) {
        outputFileName = "${variant.name}-${VERSION_NAME}.aar"
      }
    }
  }

  lintOptions {
    abortOnError false
  }

  testOptions {
    unitTests.returnDefaultValues = true
  }
}

/*
Great guide for publishing to JCenter:
http://inthecheesefactory.com/blog/how-to-upload-library-to-jcenter-maven-central-as-dependency/en

Also search for 'userOrg' here (we need this to publish to the Shopify organization on Bintray):
https://github.com/bintray/gradle-bintray-plugin

Steps:
gradlew install
gradlew bintrayUpload
*/
install {
  repositories.mavenInstaller {
    // This generates POM.xml with proper parameters
    pom {
      project {
        packaging POM_PACKAGING
        groupId POM_GROUP_ID
        artifactId POM_ARTIFACT_ID

        // Add your description here
        name POM_NAME
        description POM_DESCRIPTION
        url POM_WEB_URL

        // Set your license
        licenses {
          license {
            name POM_LICENSE
            url POM_LICENSE_URL
          }
        }

        scm {
          connection POM_DEVELOPER_URL
          developerConnection POM_DEVELOPER_URL
          url POM_WEB_URL
        }
      }
    }
  }
}

task sourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier = 'sources'
}

artifacts {
  archives sourcesJar
}

File localProperties = project.rootProject.file('local.properties')
Properties properties = new Properties()
if (localProperties.exists()) {
  properties.load(localProperties.newDataInputStream())
}

group = POM_GROUP_ID

bintray {
  user = properties.getProperty("bintray.user")
  key = properties.getProperty("bintray.apikey")

  configurations = ['archives']
  pkg {
    userOrg = POM_DEVELOPER_NAME
    repo = POM_REPO
    name = POM_NAME
    desc = POM_DESCRIPTION
    websiteUrl = POM_WEB_URL
    vcsUrl = POM_DEVELOPER_URL
    licenses = [POM_LICENSE]
    publish = true
    publicDownloadNumbers = true
    version {
      desc = POM_DESCRIPTION
    }
  }
}

dependencies {
  implementation dep.playServicesWallet

  androidTestImplementation dep.mockitoCore
  androidTestImplementation dep.truth
  androidTestImplementation 'com.android.support.test:runner:0.5'
  androidTestImplementation 'com.android.support.test:rules:0.5'

  testImplementation dep.mockitoCore
  testImplementation dep.junit
  testImplementation dep.truth
}
