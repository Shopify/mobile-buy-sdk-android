// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
  id 'com.android.library' version '7.4.1' apply false
  id 'org.jetbrains.kotlin.android' version '1.8.0' apply false
  id 'org.jetbrains.kotlin.plugin.serialization' version '1.8.0' apply false
}
subprojects {
  def projectName = it.name

  buildscript {
    System.properties['com.android.build.gradle.overrideVersionCheck'] = 'true'
    repositories {
      google()
      jcenter()
      mavenCentral()
      maven { url "https://jitpack.io" }
      maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }
  }

  repositories {
    google()
    jcenter()
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url 'https://maven.google.com' }
  }

  apply from: "../gradle/dependencies.gradle"
  apply plugin: 'checkstyle'

  checkstyle {
    toolVersion = "5.9"
    configFile rootProject.file('checkstyle.xml')
    configProperties = ['checkstyle.cache.file': rootProject.file('build/checkstyle.cache')]
    ignoreFailures false
    showViolations true
  }

  task checkstyle(type: Checkstyle) {
    source 'src/main/java'
    include '**/*.java'
    classpath = files()
  }

  afterEvaluate {
    if (project.tasks.findByName('check')) {
      check.dependsOn('checkstyle')
    }
  }
}

// TODO we can likely remove all the dex configs
project.ext.preDexLibs = !project.hasProperty('disablePreDex')

subprojects {
  project.plugins.whenPluginAdded { plugin ->
    if ("com.android.build.gradle.AppPlugin" == plugin.class.name) {
      project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
    } else if ("com.android.build.gradle.LibraryPlugin" == plugin.class.name) {
      project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
    }
  }
}
